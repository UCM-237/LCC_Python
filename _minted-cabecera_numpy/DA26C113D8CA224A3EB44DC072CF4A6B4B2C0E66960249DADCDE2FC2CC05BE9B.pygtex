\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+ch}{\PYGZsh{}!/usr/bin/env python3}
\PYG{c+c1}{\PYGZsh{} \PYGZhy{}*\PYGZhy{} coding: utf\PYGZhy{}8 \PYGZhy{}*\PYGZhy{}}
\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{Created on Thu May 23 14:50:48 2024}
\PYG{l+s+sd}{Este modulo implementa la funcion dumbdet que calcula el determinante de }
\PYG{l+s+sd}{una matriz empleando la formula de Laplace. La función es recursiva, }
\PYG{l+s+sd}{(se llama a si misma sucesivamente para calcular los cofactores necesarios). }
\PYG{l+s+sd}{Desarrolla siempre por los elementos de la primera columna. }
\PYG{l+s+sd}{(Es un prodigio de ineficiencia numerica, pero permite manejar bucles }
\PYG{l+s+sd}{y funciones recursivas, asi que supongo que puede ser útil para los que }
\PYG{l+s+sd}{empiezan a programar).}
\PYG{l+s+sd}{un posible ejercicio para ver lo malo que es el método, consiste ir}
\PYG{l+s+sd}{aumentando la dimension de la matriz y comparar lo que lo tarde en}
\PYG{l+s+sd}{calcular el determinante con lo que tarda la función de numpy.linalg.det...}
\PYG{l+s+sd}{this module implements the function poordet which calculates a matrix }
\PYG{l+s+sd}{determinant using the Laplace\PYGZsq{}s formulae. It is a recursive function, }
\PYG{l+s+sd}{(it calls itself on and on to calculate the cofactor nedded to get the }
\PYG{l+s+sd}{ determinat). It always develod the formula using the elements of the matrix}
\PYG{l+s+sd}{first column.}
\PYG{l+s+sd}{(It is the most ineficient functionever writen, but may be an example of loops }
\PYG{l+s+sd}{ and recursive functions  for begginers)}
\PYG{l+s+sd}{@author: juan}
\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{k+kn}{import} \PYG{n+nn}{numpy} \PYG{k}{as} \PYG{n+nn}{np}
\PYG{k}{def} \PYG{n+nf}{dumbdet}\PYG{p}{(}\PYG{n}{A}\PYG{p}{):}

\PYG{c+c1}{\PYGZsh{}first we check the matrix is square}
\PYG{c+c1}{\PYGZsh{}primero comprobamos si la matriz es cuadrada}
    \PYG{n}{sz} \PYG{o}{=} \PYG{n}{A}\PYG{o}{.}\PYG{n}{shape}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}
    \PYG{n}{d} \PYG{o}{=} \PYG{l+m+mi}{0} \PYG{c+c1}{\PYGZsh{}variable to save the result/ Variable para guardar el resultado}
    
    \PYG{k}{if}  \PYG{n}{sz} \PYG{o}{!=} \PYG{n}{A}\PYG{o}{.}\PYG{n}{shape}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]:}
        \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}La matriz no es cuadrada\PYGZsq{}}\PYG{p}{)}
        \PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}The matrix is not square\PYGZsq{}}\PYG{p}{)}
        \PYG{n}{d} \PYG{o}{=} \PYG{p}{[]}
    \PYG{k}{elif} \PYG{n}{sz} \PYG{o}{==} \PYG{l+m+mi}{1}\PYG{p}{:}
        \PYG{k}{return} \PYG{n}{A}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{]}
    \PYG{k}{else}\PYG{p}{:}

        \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{n}{sz}\PYG{p}{):}
            \PYG{n}{N} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{delete}\PYG{p}{(}\PYG{n}{A}\PYG{p}{,}\PYG{n}{i}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{)}
            \PYG{n}{d} \PYG{o}{=} \PYG{p}{(}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)}\PYG{o}{**}\PYG{p}{(}\PYG{n}{i}\PYG{o}{+}\PYG{l+m+mi}{2}\PYG{p}{)}\PYG{o}{*}\PYG{n}{A}\PYG{p}{[}\PYG{n}{i}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{*}\PYG{n}{dumbdet}\PYG{p}{(}\PYG{n}{N}\PYG{p}{[:,}\PYG{l+m+mi}{1}\PYG{p}{:}\PYG{n}{sz}\PYG{p}{])}\PYG{o}{+}\PYG{n}{d}
            
    
    \PYG{k}{return} \PYG{n}{d}
\end{Verbatim}
