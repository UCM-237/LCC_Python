\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+ch}{\PYGZsh{}!/usr/bin/env python3}
\PYG{c+c1}{\PYGZsh{} \PYGZhy{}*\PYGZhy{} coding: utf\PYGZhy{}8 \PYGZhy{}*\PYGZhy{}}
\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{Created on Wed Feb 26 15:20:07 2025}
\PYG{l+s+sd}{Middle Square method to generate psudo\PYGZhy{}random numbers}
\PYG{l+s+sd}{@author: chapgpt}
\PYG{l+s+sd}{@Juan: Beware: the function do not check the number of digits of the seed.}
\PYG{l+s+sd}{So is up to the user to introduce a seed with the proper size}
\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{k}{def} \PYG{n+nf}{middle\PYGZus{}square}\PYG{p}{(}\PYG{n}{seed}\PYG{p}{,} \PYG{n}{num\PYGZus{}digits}\PYG{p}{,} \PYG{n}{num\PYGZus{}iterations}\PYG{p}{):}
    \PYG{c+c1}{\PYGZsh{} Initialize the current number with the seed}
    \PYG{n}{current\PYGZus{}number} \PYG{o}{=} \PYG{n}{seed}
    
    \PYG{c+c1}{\PYGZsh{} List to store the random numbers generated}
    \PYG{n}{random\PYGZus{}numbers} \PYG{o}{=} \PYG{p}{[]}
    
    \PYG{k}{for} \PYG{n}{\PYGZus{}} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n}{num\PYGZus{}iterations}\PYG{p}{):}
        \PYG{c+c1}{\PYGZsh{} Square the current number}
        \PYG{n}{squared} \PYG{o}{=} \PYG{n}{current\PYGZus{}number} \PYG{o}{*} \PYG{n}{current\PYGZus{}number}
        
        \PYG{c+c1}{\PYGZsh{} Convert squared number to string to extract middle digits}
        \PYG{c+c1}{\PYGZsh{} Calculate the number of digits in the squared result}
        \PYG{n}{squared\PYGZus{}str} \PYG{o}{=} \PYG{n+nb}{str}\PYG{p}{(}\PYG{n}{squared}\PYG{p}{)}
        
        \PYG{c+c1}{\PYGZsh{} Calculate the start and end index for the middle digits}
        \PYG{n}{mid\PYGZus{}start} \PYG{o}{=} \PYG{p}{(}\PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{squared\PYGZus{}str}\PYG{p}{)} \PYG{o}{\PYGZhy{}} \PYG{n}{num\PYGZus{}digits}\PYG{p}{)} \PYG{o}{//} \PYG{l+m+mi}{2}
        \PYG{n}{mid\PYGZus{}end} \PYG{o}{=} \PYG{n}{mid\PYGZus{}start} \PYG{o}{+} \PYG{n}{num\PYGZus{}digits}
        
        \PYG{c+c1}{\PYGZsh{} Extract the middle digits (as integer)}
        \PYG{n}{middle\PYGZus{}digits} \PYG{o}{=} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n}{squared\PYGZus{}str}\PYG{p}{[}\PYG{n}{mid\PYGZus{}start}\PYG{p}{:}\PYG{n}{mid\PYGZus{}end}\PYG{p}{])}
        
        \PYG{c+c1}{\PYGZsh{} Add the middle digits to the list of random numbers}
        \PYG{n}{random\PYGZus{}numbers}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{middle\PYGZus{}digits}\PYG{p}{)}
        
        \PYG{c+c1}{\PYGZsh{} Update current\PYGZus{}number to the middle digits for the next iteration}
        \PYG{n}{current\PYGZus{}number} \PYG{o}{=} \PYG{n}{middle\PYGZus{}digits}
    
    \PYG{k}{return} \PYG{n}{random\PYGZus{}numbers}

\PYG{c+c1}{\PYGZsh{} Example usage}
\PYG{n}{seed} \PYG{o}{=} \PYG{l+m+mi}{3708}  \PYG{c+c1}{\PYGZsh{} Initial seed}
\PYG{n}{num\PYGZus{}digits} \PYG{o}{=} \PYG{l+m+mi}{4}  \PYG{c+c1}{\PYGZsh{} Number of digits to extract as the random number}
\PYG{n}{num\PYGZus{}iterations} \PYG{o}{=} \PYG{l+m+mi}{10}  \PYG{c+c1}{\PYGZsh{} Number of iterations to generate}

\PYG{n}{random\PYGZus{}sequence} \PYG{o}{=} \PYG{n}{middle\PYGZus{}square}\PYG{p}{(}\PYG{n}{seed}\PYG{p}{,} \PYG{n}{num\PYGZus{}digits}\PYG{p}{,} \PYG{n}{num\PYGZus{}iterations}\PYG{p}{)}
\PYG{n+nb}{print}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}Random Sequence:\PYGZdq{}}\PYG{p}{,} \PYG{n}{random\PYGZus{}sequence}\PYG{p}{)}
\end{Verbatim}
